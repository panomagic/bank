--DROP TABLE accounts IF EXISTS;
CREATE TABLE accounts
(
  id INTEGER PRIMARY KEY NOT NULL GENERATED BY DEFAULT AS IDENTITY,
  clients_clientID INTEGER NOT NULL,
  currencies_currencyID INTEGER NOT NULL,
  accountTypes_accTypeID INTEGER NOT NULL,
  balance DECIMAL(13,2) DEFAULT 0.00
);

--DROP TABLE accounttypes IF EXISTS;
CREATE TABLE accounttypes
(
  accTypeID INTEGER PRIMARY KEY NOT NULL GENERATED BY DEFAULT AS IDENTITY,
  accountType VARCHAR(6) NOT NULL
);

--DROP TABLE clients IF EXISTS;
CREATE TABLE clients
(
  id INTEGER PRIMARY KEY NOT NULL GENERATED BY DEFAULT AS IDENTITY,
  fullName VARCHAR(70) NOT NULL,
  gender CHAR(1) NOT NULL,
  dateOfBirth DATE NOT NULL,
  dateOfReg DATE NOT NULL
);

--DROP TABLE currencies IF EXISTS;
CREATE TABLE currencies
(
  id INTEGER PRIMARY KEY NOT NULL GENERATED BY DEFAULT AS IDENTITY,
  currency VARCHAR(3) NOT NULL
);

--DROP TABLE transactions IF EXISTS;
CREATE TABLE transactions
(
  id INTEGER PRIMARY KEY NOT NULL GENERATED BY DEFAULT AS IDENTITY,
  currencies_currencyID INTEGER NOT NULL,
  clients_payerID INTEGER NOT NULL,
  accounts_payerAccID INTEGER NOT NULL,
  clients_recipientID INTEGER NOT NULL,
  accounts_recipientAccID INTEGER NOT NULL,
  transactionTypes_transTypeID INTEGER NOT NULL,
  trans_datetime TIMESTAMP DEFAULT CURRENT_TIMESTAMP NOT NULL,
  amount DECIMAL(13,2) DEFAULT 0.00 NOT NULL
);

--DROP TABLE transactiontypes IF EXISTS;
CREATE TABLE transactiontypes
(
  transTypeID INTEGER PRIMARY KEY NOT NULL GENERATED BY DEFAULT AS IDENTITY,
  transType VARCHAR(8) NOT NULL
);

--DROP TABLE users IF EXISTS;
CREATE TABLE users
(
  id INTEGER PRIMARY KEY NOT NULL GENERATED BY DEFAULT AS IDENTITY,
  userName VARCHAR(50) NOT NULL,
  psw VARCHAR(30),
  role CHAR(1) DEFAULT 'c' NOT NULL,
  clients_clientID INTEGER,
  image BLOB,
  imagepath VARCHAR(150)
);
ALTER TABLE accounts ADD FOREIGN KEY (accountTypes_accTypeID) REFERENCES accounttypes (accTypeID);
ALTER TABLE accounts ADD FOREIGN KEY (clients_clientID) REFERENCES clients (id) ON DELETE CASCADE ON UPDATE CASCADE;
ALTER TABLE accounts ADD FOREIGN KEY (currencies_currencyID) REFERENCES currencies (id);
CREATE UNIQUE INDEX accountID_UNIQUE ON accounts (id);
CREATE INDEX accountTypes_accounts ON accounts (accountTypes_accTypeID);
CREATE INDEX clients_accounts ON accounts (clients_clientID);
CREATE INDEX currencies_accounts ON accounts (currencies_currencyID);
CREATE UNIQUE INDEX accTypeID_UNIQUE ON accounttypes (accTypeID);
CREATE UNIQUE INDEX clientID_UNIQUE ON clients (id);
CREATE UNIQUE INDEX currencyID_UNIQUE ON currencies (id);
ALTER TABLE transactions ADD FOREIGN KEY (accounts_payerAccID) REFERENCES accounts (id) ON DELETE CASCADE ON UPDATE CASCADE;
ALTER TABLE transactions ADD FOREIGN KEY (accounts_recipientAccID) REFERENCES accounts (id) ON DELETE CASCADE ON UPDATE CASCADE;
ALTER TABLE transactions ADD FOREIGN KEY (clients_payerID) REFERENCES clients (id) ON DELETE CASCADE ON UPDATE CASCADE;
ALTER TABLE transactions ADD FOREIGN KEY (clients_recipientID) REFERENCES clients (id) ON DELETE CASCADE ON UPDATE CASCADE;
ALTER TABLE transactions ADD FOREIGN KEY (currencies_currencyID) REFERENCES currencies (id) ON DELETE CASCADE ON UPDATE CASCADE;
ALTER TABLE transactions ADD FOREIGN KEY (transactionTypes_transTypeID) REFERENCES transactiontypes (transTypeID) ON DELETE CASCADE ON UPDATE CASCADE;
CREATE UNIQUE INDEX transID_UNIQUE ON transactions (id);
CREATE INDEX accounts_transactions ON transactions (accounts_payerAccID);
CREATE INDEX accounts_transactions2_idx ON transactions (accounts_recipientAccID);
CREATE INDEX clients_transactions ON transactions (clients_payerID);
CREATE INDEX clients_transactions2_idx ON transactions (clients_recipientID);
CREATE INDEX currencies_transactions ON transactions (currencies_currencyID);
CREATE INDEX transactionTypes_transactions ON transactions (transactionTypes_transTypeID);
CREATE UNIQUE INDEX transTypeID_UNIQUE ON transactiontypes (transTypeID);
ALTER TABLE users ADD FOREIGN KEY (clients_clientID) REFERENCES clients (id);
CREATE UNIQUE INDEX userID_UNIQUE ON users (id);
CREATE UNIQUE INDEX userName_UNIQUE ON users (userName);